1. xargs
  1. count lines
    https://unix.stackexchange.com/questions/260630/how-do-you-list-number-of-lines-of-every-file-in-a-directory-in-human-readable-f
    find . -name "*.java" | xargs wc -l
  2. remove older files
    find /tmp -mtime +14 | xargs rm
  3. -t, show command
    find /tmp -mtime +14 | xargs -t rm
    
2. grep
  1. before and after lines
    grep -B 3 -A 2 foo README.txt
    grep -C 3 foo README.txt
  2. display the lines which does not matches all the given pattern.

      Syntax:
      grep -v -e "pattern" -e "pattern"

      $ cat test-file.txt
      a
      b
      c
      d

      $ grep -v -e "a" -e "b" -e "c" test-file.txt
      d
 3. find
    1. Executing Commands on the Files Found by the Find Command.

        In the example below, the find command calculates the md5sum of all the files with the name MyCProgram.c (ignoring case). {} is replaced by the current file name.

        # find -iname "MyCProgram.c" -exec md5sum {} \;
        
     2. Inverting the match.

        Shows the files or directories whose name are not MyCProgram.c .Since the maxdepth is 1, this will look only under current directory.

        # find -maxdepth 1 -not -iname "MyCProgram.c"
        
     3. Finding the Top 5 Big Files

        The following command will display the top 5 largest file in the current directory and its subdirectory. This may take a while to execute depending on the total number of files the command has to process.

        # find . -type f -exec ls -s {} \; | sort -n -r | head -5
